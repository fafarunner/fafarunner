name: Test Linux zip

on:
  workflow_dispatch:

# Declare default permissions as readonly.
permissions: read-all

jobs:
  zip:
    name: Create linux zip
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies for Linux
        run: |
          sudo apt update
          sudo apt install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev
          sudo apt install -y p7zip-full p7zip-rar

      - name: Install GStreamer
        run: |
          # Install libunwind-dev, see https://github.com/actions/runner-images/issues/6399#issuecomment-1285011525
          sudo apt install -y libunwind-dev
          sudo apt install -y libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: '3.24.3'

      - name: Flutter doctor -v
        run: flutter doctor -v

      - name: Configure .env
        run: |
          echo "$ENV_KEY" | base64 --decode > .env
        env:
          ENV_KEY: ${{ secrets.ENV_STG_BASE64 }}

      - name: Install flutter_distributor
        run: dart pub global activate flutter_distributor

      - name: Install flutter dependencies
        run: flutter pub get

      - name: Build zip
        run: flutter_distributor package --flutter-build-args "dart-define-from-file=.env,target-platform=linux-x64" --platform linux --targets zip --artifact-name '{{name}}_{{build_name}}+{{build_number}}_{{platform}}_amd64.{{ext}}'

      # Package the build.
      - name: Copy build for zip
        run: ls -laR
        working-directory: dist

      - uses: actions/upload-artifact@v4
        with:
          name: linux-zip-artifact
          path: |
            ./dist/**/*.zip

      - name: Clean up
        if: ${{ always() }}
        run: |
          rm -f .env
