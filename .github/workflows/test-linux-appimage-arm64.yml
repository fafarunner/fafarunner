name: Test Linux AppImage (arm64)

on:
  workflow_dispatch:

# Declare default permissions as readonly.
permissions: read-all

jobs:
  appimage:
    name: Create linux appimage (aarch64)
    runs-on: ubuntu-22.04-arm
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies for Linux
        run: |
          sudo apt-get update -y && sudo apt-get upgrade -y
          sudo apt-get install -y curl libcurl4-openssl-dev git unzip xz-utils zip libglu1-mesa
          sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev libstdc++-12-dev
          sudo apt-get install -y locate libfuse2

      - name: Install libunwind-dev
        run: |
          # Install libunwind-dev, see https://github.com/actions/runner-images/issues/6399#issuecomment-1285011525
          sudo apt-get install -y libunwind-dev

      - name: Install GStreamer
        run: sudo apt-get install -y libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev

      - name: Install ayatana-appindicator3-0.1
        run: |
          # used by tray_manager
          sudo apt-get install -y libayatana-appindicator3-dev

      - name: Install appimagetool
        run: |
          wget -O appimagetool "https://github.com/AppImage/appimagetool/releases/download/continuous/appimagetool-aarch64.AppImage"
          # https://github.com/AppImage/AppImageKit/issues/1056#issuecomment-643382397
          # sed -i 's|AI\x02|\x00\x00\x00|' appimagetool
          chmod +x appimagetool && mv appimagetool /usr/local/bin/

      - name: Setup Flutter
        shell: bash
        run: |
          chmod +x ./scripts/install-flutter-github-actions.sh
          ./scripts/install-flutter-github-actions.sh

      - name: Flutter doctor -v
        run: flutter doctor -v

      - name: Configure .env
        run: |
          echo "$ENV_KEY" | base64 --decode > .env
        env:
          ENV_KEY: ${{ secrets.ENV_STG_BASE64 }}

      - name: Install fastforge
        run: |
          dart pub global activate \
            --source git https://github.com/kjxbyz/fastforge \
            --git-ref appimage-arm64 \
            --git-path packages/fastforge

      - name: Build AppImage
        run: |
          export SENTRY_NATIVE_BACKEND=breakpad
          fastforge package \
            --flutter-build-args "dart-define-from-file=.env" \
            --platform linux \
            --targets appimage \
            --artifact-name '{{name}}-{{build_name}}.{{build_number}}-{{platform}}-aarch64.{{ext}}'

      # Package the build.
      - name: Copy build for AppImage
        run: ls -laR
        working-directory: dist

      - uses: actions/upload-artifact@v4
        with:
          name: linux-appimage-arm64-artifact
          path: |
            ./dist/**/*.AppImage

      - name: Clean up
        if: ${{ always() }}
        run: |
          rm -f .env
