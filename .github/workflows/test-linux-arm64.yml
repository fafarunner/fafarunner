name: Test Linux (arm64)

on:
  workflow_dispatch:

# Declare default permissions as readonly.
permissions: read-all

jobs:
  appimage:
    name: Create AppImage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Show linux info
        run: uname --all

      - name: Configure .env
        run: |
          echo "$ENV_KEY" | base64 --decode > .env
        env:
          ENV_KEY: ${{ secrets.ENV_STG_BASE64 }}

      - uses: addnab/docker-run-action@v3
        with:
          image: ghcr.io/grimbough/bioc-with-tinytex:devel-arm64
          options: |
            --platform linux/arm64
            -v ${{ github.workspace }}:/work
            --workdir /work
          shell: bash
          run: |
            set -x
            # Show linux info
            echo "Show linux info"
            uname --all

            # Install dependencies for Linux
            echo "Install dependencies for Linux"
            sudo apt update
            sudo apt install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev
            sudo apt install locate libfuse2
            wget -O appimagetool "https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-armhf.AppImage"
            chmod +x appimagetool && mv appimagetool /usr/local/bin/
            
            # Install libunwind-dev, see https://github.com/actions/runner-images/issues/6399#issuecomment-1285011525
            sudo apt install -y libunwind-dev
            sudo apt install -y libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev
            
            # Setup Flutter
            echo "Setup Flutter"
            bash ./install-flutter-ubuntu.sh
            
            if [ -d "/home/linux-arm64/flutter" ]; then
              echo "ðŸŸ© ls -la"
              ls -la /home/linux-arm64/flutter
            fi
            echo 'export PATH="$PATH:/home/linux-arm64/flutter/bin:/home/linux-arm64/flutter/.pub-cache/bin:$HOME/.pub-cache/bin"' >> ~/.zshrc
            source ~/.zshrc
            echo $PATH
            
            # Install flutter_distributor
            echo "Install flutter_distributor"
            dart pub global activate flutter_distributor
            
            # Flutter doctor
            echo "Flutter doctor -v"
            flutter doctor -v
            
            # Install flutter dependencies
            echo "Install flutter dependencies"
            flutter pub get
            
            # Build AppImage
            echo "Build AppImage"
            flutter_distributor package --flutter-build-args "dart-define-from-file=.env,target-platform=linux-arm64" --platform linux --targets appimage --artifact-name '{{name}}_{{build_name}}+{{build_number}}_{{platform}}_aarch64.{{ext}}'

      # Package the build.
      - name: Copy build for AppImage
        run: ls -laR
        working-directory: dist

      - uses: actions/upload-artifact@v4
        with:
          name: linux-appimage-arm64-artifact
          path: |
            ./dist/**/*.AppImage

      - name: Clean up
        if: ${{ always() }}
        run: |
          rm -f .env

  deb:
    name: Create deb
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Show linux info
        run: uname --all

      - name: Configure .env
        run: |
          echo "$ENV_KEY" | base64 --decode > .env
        env:
          ENV_KEY: ${{ secrets.ENV_STG_BASE64 }}

      - uses: addnab/docker-run-action@v3
        with:
          image: ghcr.io/grimbough/bioc-with-tinytex:devel-arm64
          options: |
            --platform linux/arm64
            -v ${{ github.workspace }}:/work
            --workdir /work
          shell: bash
          run: |
            set -x
            # Show linux info
            echo "Show linux info"
            uname --all

            # Install dependencies for Linux
            echo "Install dependencies for Linux"
            sudo apt update
            sudo apt install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev
            
            # Install libunwind-dev, see https://github.com/actions/runner-images/issues/6399#issuecomment-1285011525
            sudo apt install -y libunwind-dev
            sudo apt install -y libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev

            # Setup Flutter
            echo "Setup Flutter"
            bash ./install-flutter-ubuntu.sh
            
            if [ -d "/home/linux-arm64/flutter" ]; then
              echo "ðŸŸ© ls -la"
              ls -la /home/linux-arm64/flutter
            fi
            echo 'export PATH="$PATH:/home/linux-arm64/flutter/bin:/home/linux-arm64/flutter/.pub-cache/bin:$HOME/.pub-cache/bin"' >> ~/.zshrc
            source ~/.zshrc
            echo $PATH

            # Install flutter_distributor
            echo "Install flutter_distributor"
            dart pub global activate flutter_distributor

            # Flutter doctor
            echo "Flutter doctor -v"
            flutter doctor -v

            # Install flutter dependencies
            echo "Install flutter dependencies"
            flutter pub get

            # Build deb
            echo "Build deb"
            flutter_distributor package --flutter-build-args "dart-define-from-file=.env,target-platform=linux-arm64" --platform linux --targets deb --artifact-name '{{name}}_{{build_name}}+{{build_number}}_{{platform}}_aarch64.{{ext}}'

      # Package the build.
      - name: Copy build for deb
        run: ls -laR
        working-directory: dist

      - uses: actions/upload-artifact@v4
        with:
          name: linux-deb-arm64-artifact
          path: |
            ./dist/**/*.deb

      - name: Clean up
        if: ${{ always() }}
        run: |
          rm -f .env

  rpm:
    name: Create rpm
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Show linux info
        run: uname --all

      - name: Configure .env
        run: |
          echo "$ENV_KEY" | base64 --decode > .env
        env:
          ENV_KEY: ${{ secrets.ENV_STG_BASE64 }}

      - uses: addnab/docker-run-action@v3
        with:
          image: ghcr.io/grimbough/bioc-with-tinytex:devel-arm64
          options: |
            --platform linux/arm64
            -v ${{ github.workspace }}:/work
            --workdir /work
          shell: bash
          run: |
            set -x
            # Show linux info
            echo "Show linux info"
            uname --all

            # Install dependencies for Linux
            echo "Install dependencies for Linux"
            sudo apt update
            sudo apt install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev
            sudo apt install -y rpm patchelf
            
            # Install libunwind-dev, see https://github.com/actions/runner-images/issues/6399#issuecomment-1285011525
            sudo apt install -y libunwind-dev
            sudo apt install -y libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev
            
            # Install JDK
            echo "Install JDK"
            sudo apt install -y wget apt-transport-https gnupg
            wget -O - https://packages.adoptium.net/artifactory/api/gpg/key/public | apt-key add -
            echo "deb https://packages.adoptium.net/artifactory/deb $(awk -F= '/^VERSION_CODENAME/{print$2}' /etc/os-release) main" | tee /etc/apt/sources.list.d/adoptium.list
            sudo apt update
            sudo apt install -y temurin-17-jdk

            # Setup Flutter
            echo "Setup Flutter"
            bash ./install-flutter-ubuntu.sh
            
            if [ -d "/home/linux-arm64/flutter" ]; then
              echo "ðŸŸ© ls -la"
              ls -la /home/linux-arm64/flutter
            fi
            echo 'export PATH="$PATH:/home/linux-arm64/flutter/bin:/home/linux-arm64/flutter/.pub-cache/bin:$HOME/.pub-cache/bin"' >> ~/.zshrc
            source ~/.zshrc
            echo $PATH

            # Install flutter_distributor
            echo "Install flutter_distributor"
            dart pub global activate flutter_distributor

            # Flutter doctor
            echo "Flutter doctor -v"
            flutter doctor -v

            # Install flutter dependencies
            echo "Install flutter dependencies"
            flutter pub get
            
            if ! command -v yq >/dev/null 2>&1; then
              echo "yq not exists"
              sudo add-apt-repository ppa:rmescandon/yq
              sudo apt update
              sudo apt install -y yq
            fi
            yq --version
            
            # Update make_config.yaml
            echo "Update make_config.yaml"
            yq -i '.build_arch = "aarch64"' linux/packaging/rpm/make_config.yaml

            # Build RPM
            echo "Build RPM"
            flutter_distributor package --flutter-build-args "dart-define-from-file=.env,target-platform=linux-arm64" --platform linux --targets rpm --artifact-name '{{name}}_{{build_name}}+{{build_number}}_{{platform}}_aarch64.{{ext}}'

      # Package the build.
      - name: Copy build for rpm
        run: ls -laR
        working-directory: dist

      - uses: actions/upload-artifact@v4
        with:
          name: linux-rpm-arm64-artifact
          path: |
            ./dist/**/*.rpm

      - name: Clean up
        if: ${{ always() }}
        run: |
          rm -f .env

  zip:
    name: Create zip
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Show linux info
        run: uname --all

      - name: Configure .env
        run: |
          echo "$ENV_KEY" | base64 --decode > .env
        env:
          ENV_KEY: ${{ secrets.ENV_STG_BASE64 }}

      - uses: addnab/docker-run-action@v3
        with:
          image: ghcr.io/grimbough/bioc-with-tinytex:devel-arm64
          options: |
            --platform linux/arm64
            -v ${{ github.workspace }}:/work
            --workdir /work
          shell: bash
          run: |
            set -x
            # Show linux info
            echo "Show linux info"
            uname --all

            # Install dependencies for Linux
            echo "Install dependencies for Linux"
            sudo apt update
            sudo apt install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev
            sudo apt install -y p7zip-full p7zip-rar
            
            # Install libunwind-dev, see https://github.com/actions/runner-images/issues/6399#issuecomment-1285011525
            sudo apt install -y libunwind-dev
            sudo apt install -y libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev

            # Setup Flutter
            echo "Setup Flutter"
            bash ./install-flutter-ubuntu.sh
            
            if [ -d "/home/linux-arm64/flutter" ]; then
              echo "ðŸŸ© ls -la"
              ls -la /home/linux-arm64/flutter
            fi
            echo 'export PATH="$PATH:/home/linux-arm64/flutter/bin:/home/linux-arm64/flutter/.pub-cache/bin:$HOME/.pub-cache/bin"' >> ~/.zshrc
            source ~/.zshrc
            echo $PATH

            # Install flutter_distributor
            echo "Install flutter_distributor"
            dart pub global activate flutter_distributor

            # Flutter doctor
            echo "Flutter doctor -v"
            flutter doctor -v

            # Install flutter dependencies
            echo "Install flutter dependencies"
            flutter pub get

            # Build zip
            echo "Build zip"
            flutter_distributor package --flutter-build-args "dart-define-from-file=.env,target-platform=linux-arm64" --platform linux --targets zip --artifact-name '{{name}}_{{build_name}}+{{build_number}}_{{platform}}_aarch64.{{ext}}'

      # Package the build.
      - name: Copy build for zip
        run: ls -laR
        working-directory: dist

      - uses: actions/upload-artifact@v4
        with:
          name: linux-zip-arm64-artifact
          path: |
            ./dist/**/*.zip

      - name: Clean up
        if: ${{ always() }}
        run: |
          rm -f .env

  tar:
    name: Create tar
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Show linux info
        run: uname --all

      - name: Configure .env
        run: |
          echo "$ENV_KEY" | base64 --decode > .env
        env:
          ENV_KEY: ${{ secrets.ENV_STG_BASE64 }}

      - uses: addnab/docker-run-action@v3
        with:
          image: ghcr.io/grimbough/bioc-with-tinytex:devel-arm64
          options: |
            --platform linux/arm64
            -v ${{ github.workspace }}:/work
            --workdir /work
          shell: bash
          run: |
            set -x
            # Show linux info
            echo "Show linux info"
            uname --all

            # Install dependencies for Linux
            echo "Install dependencies for Linux"
            sudo apt update
            sudo apt install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev
            sudo apt install -y p7zip-full p7zip-rar
            
            # Install libunwind-dev, see https://github.com/actions/runner-images/issues/6399#issuecomment-1285011525
            sudo apt install -y libunwind-dev
            sudo apt install -y libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev

            # Setup Flutter
            echo "Setup Flutter"
            bash ./install-flutter-ubuntu.sh

            if [ -d "/home/linux-arm64/flutter" ]; then
              echo "ðŸŸ© ls -la"
              ls -la /home/linux-arm64/flutter
            fi
            echo 'export PATH="$PATH:/home/linux-arm64/flutter/bin:/home/linux-arm64/flutter/.pub-cache/bin:$HOME/.pub-cache/bin"' >> ~/.zshrc
            source ~/.zshrc
            echo $PATH

            # Flutter doctor
            echo "Flutter doctor -v"
            flutter doctor -v

            # Install flutter dependencies
            echo "Install flutter dependencies"
            flutter pub get
            
            # Build flutter
            echo "Build flutter"
            flutter build linux --dart-define-from-file=.env --target-platform=linux-arm64
            
            # Install yq
            if ! command -v yq >/dev/null 2>&1; then
              echo "yq not exists"
              if ! command -v wget >/dev/null 2>&1; then
                echo "wget not exists"
                sudo apt install -y wget
              fi
              wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_arm64 -O /usr/bin/yq &&\
              chmod +x /usr/bin/yq
            fi
            yq --version
            
            # Get version
            echo "Get version"
            version=$(yq '.version' pubspec.yaml)

            # Build tar
            echo "Build tar"
            baseDir=$(pwd)
            archiveName="fafarunner_"$version"_linux_aarch64.tar.gz"
            cd build/linux/arm64/release/bundle
            tar -czaf $archiveName ./*
            mv $archiveName "$baseDir/"

      # Package the build.
      - name: Copy build for tar
        run: ls -la *.tar.gz

      - uses: actions/upload-artifact@v4
        with:
          name: linux-tar-arm64-artifact
          path: |
            ./*.tar.gz

      - name: Clean up
        if: ${{ always() }}
        run: |
          rm -f .env
