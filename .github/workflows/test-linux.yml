name: Test Linux

on:
  workflow_dispatch:

# Declare default permissions as readonly.
permissions: read-all

jobs:
  appimage:
    name: Create AppImage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies for Linux
        run: |
          sudo apt update
          sudo apt install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev
          sudo apt install locate libfuse2
          wget -O appimagetool "https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage"
          chmod +x appimagetool && mv appimagetool /usr/local/bin/

      - name: Install GStreamer
        run: |
          # Install libunwind-dev, see https://github.com/actions/runner-images/issues/6399#issuecomment-1285011525
          sudo apt install -y libunwind-dev
          sudo apt install -y libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: '3.19.6'

      - name: Configure .env
        run: |
          echo "$ENV_KEY" | base64 --decode > .env
        env:
          ENV_KEY: ${{ secrets.ENV_STG_BASE64 }}

      - name: Install flutter_distributor
        run: dart pub global activate flutter_distributor

      - name: Flutter doctor -v
        run: flutter doctor -v

      - name: Install flutter dependencies
        run: flutter pub get

      - name: Build AppImage
        run: flutter_distributor package --flutter-build-args "dart-define-from-file=.env,target-platform=linux-x64" --platform linux --targets appimage --artifact-name '{{name}}_{{build_name}}+{{build_number}}_{{platform}}_x86_64.{{ext}}'

      # Package the build.
      - name: Copy build for AppImage
        run: ls -laR
        working-directory: dist

      - uses: actions/upload-artifact@v4
        with:
          name: linux-appimage-artifact
          path: |
            ./dist/**/*.AppImage

      - name: Clean up
        if: ${{ always() }}
        run: |
          rm -f .env

  deb:
    name: Create deb
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies for Linux
        run: |
          sudo apt update
          sudo apt install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev
          sudo apt install rpm patchelf

      - name: Install GStreamer
        run: |
          # Install libunwind-dev, see https://github.com/actions/runner-images/issues/6399#issuecomment-1285011525
          sudo apt install -y libunwind-dev
          sudo apt install -y libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: '3.19.6'

      - name: Configure .env
        run: |
          echo "$ENV_KEY" | base64 --decode > .env
        env:
          ENV_KEY: ${{ secrets.ENV_STG_BASE64 }}

      - name: Install flutter_distributor
        run: dart pub global activate flutter_distributor

      - name: Flutter doctor -v
        run: flutter doctor -v

      - name: Install flutter dependencies
        run: flutter pub get

      - name: Build deb
        run: flutter_distributor package --flutter-build-args "dart-define-from-file=.env,target-platform=linux-x64" --platform linux --targets deb --artifact-name '{{name}}_{{build_name}}+{{build_number}}_{{platform}}_x86_64.{{ext}}'

      # Package the build.
      - name: Copy build for deb
        run: ls -laR
        working-directory: dist

      - uses: actions/upload-artifact@v4
        with:
          name: linux-deb-artifact
          path: |
            ./dist/**/*.deb

      - name: Clean up
        if: ${{ always() }}
        run: |
          rm -f .env

  rpm:
    name: Create rpm
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: "17.x"
          distribution: 'temurin'

      - name: Install dependencies for Linux
        run: |
          sudo apt update
          sudo apt install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev

      - name: Install GStreamer
        run: |
          # Install libunwind-dev, see https://github.com/actions/runner-images/issues/6399#issuecomment-1285011525
          sudo apt install -y libunwind-dev
          sudo apt install -y libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: '3.19.6'

      - name: Configure .env
        run: |
          echo "$ENV_KEY" | base64 --decode > .env
        env:
          ENV_KEY: ${{ secrets.ENV_STG_BASE64 }}

      - name: Install flutter_distributor
        run: dart pub global activate flutter_distributor

      - name: Flutter doctor -v
        run: flutter doctor -v

      - name: Install flutter dependencies
        run: flutter pub get

      - name: Build RPM
        run: flutter_distributor package --flutter-build-args "dart-define-from-file=.env,target-platform=linux-x64" --platform linux --targets rpm --artifact-name '{{name}}_{{build_name}}+{{build_number}}_{{platform}}_x86_64.{{ext}}'

      # Package the build.
      - name: Copy build for rpm
        run: ls -laR
        working-directory: dist

      - uses: actions/upload-artifact@v4
        with:
          name: linux-rpm-artifact
          path: |
            ./dist/**/*.rpm

      - name: Clean up
        if: ${{ always() }}
        run: |
          rm -f .env

  zip:
    name: Create zip
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies for Linux
        run: |
          sudo apt update
          sudo apt install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev
          sudo apt install -y p7zip-full p7zip-rar

      - name: Install GStreamer
        run: |
          # Install libunwind-dev, see https://github.com/actions/runner-images/issues/6399#issuecomment-1285011525
          sudo apt install -y libunwind-dev
          sudo apt install -y libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: '3.19.6'

      - name: Configure .env
        run: |
          echo "$ENV_KEY" | base64 --decode > .env
        env:
          ENV_KEY: ${{ secrets.ENV_STG_BASE64 }}

      - name: Install flutter_distributor
        run: dart pub global activate flutter_distributor

      - name: Flutter doctor -v
        run: flutter doctor -v

      - name: Install flutter dependencies
        run: flutter pub get

      - name: Build zip
        run: flutter_distributor package --flutter-build-args "dart-define-from-file=.env,target-platform=linux-x64" --platform linux --targets zip --artifact-name '{{name}}_{{build_name}}+{{build_number}}_{{platform}}_x86_64.{{ext}}'

      # Package the build.
      - name: Copy build for zip
        run: ls -laR
        working-directory: dist

      - uses: actions/upload-artifact@v4
        with:
          name: linux-zip-artifact
          path: |
            ./dist/**/*.zip

      - name: Clean up
        if: ${{ always() }}
        run: |
          rm -f .env

  tar:
    name: Create tar
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies for Linux
        run: |
          sudo apt update
          sudo apt install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev
          sudo apt install -y p7zip-full p7zip-rar

      - name: Install GStreamer
        run: |
          # Install libunwind-dev, see https://github.com/actions/runner-images/issues/6399#issuecomment-1285011525
          sudo apt install -y libunwind-dev
          sudo apt install -y libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: '3.19.6'

      - name: Configure .env
        run: |
          echo "$ENV_KEY" | base64 --decode > .env
        env:
          ENV_KEY: ${{ secrets.ENV_STG_BASE64 }}

      - name: Flutter doctor -v
        run: flutter doctor -v

      - name: Install flutter dependencies
        run: flutter pub get

      - name: Build flutter
        run: flutter build linux --dart-define-from-file=.env --target-platform=linux-x64

      - name: Install yq
        run: |
          if ! command -v yq >/dev/null 2>&1; then
            echo "yq not exists"
            if ! command -v wget >/dev/null 2>&1; then
              echo "wget not exists"
              sudo apt install -y wget
            fi
            wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq &&\
            chmod +x /usr/bin/yq
          fi
          yq --version

      - name: Build tar
        run: |
          baseDir=$(pwd)
          VERSION=$(yq '.version' pubspec.yaml)
          echo "$VERSION"
          archiveName="fafarunner_"$VERSION"_linux_x86_64.tar.gz"
          cd build/linux/x64/release/bundle
          tar -czaf $archiveName ./*
          mv $archiveName "$baseDir/"

      # Package the build.
      - name: Copy build for tar
        run: ls -la *.tar.gz

      - uses: actions/upload-artifact@v4
        with:
          name: linux-tar-artifact
          path: |
            ./*.tar.gz

      - name: Clean up
        if: ${{ always() }}
        run: |
          rm -f .env
