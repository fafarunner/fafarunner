name: Test Linux rpm

on:
  workflow_dispatch:

# Declare default permissions as readonly.
permissions: read-all

jobs:
  rpm:
    name: Create linux rpm
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: "17.x"
          distribution: 'temurin'

      - name: Install dependencies for Linux
        run: |
          sudo apt-get update -y && sudo apt-get upgrade -y
          sudo apt-get install -y curl libcurl4-openssl-dev git unzip xz-utils zip libglu1-mesa
          sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev libstdc++-12-dev

      - name: Install libunwind-dev
        run: |
          # Install libunwind-dev, see https://github.com/actions/runner-images/issues/6399#issuecomment-1285011525
          sudo apt-get install -y libunwind-dev

      - name: Install GStreamer
        run: sudo apt-get install -y libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev

      - name: Install ayatana-appindicator3-0.1
        run: |
          # used by tray_manager
          sudo apt-get install -y libayatana-appindicator3-dev

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: '3.32.4'

      - name: Flutter doctor -v
        run: flutter doctor -v

      - name: Configure .env
        run: |
          echo "$ENV_KEY" | base64 --decode > .env
        env:
          ENV_KEY: ${{ secrets.ENV_STG_BASE64 }}

      - name: Install fastforge
        run: dart pub global activate fastforge

      - name: Build RPM
        run: |
          export SENTRY_NATIVE_BACKEND=breakpad
          fastforge package \
            --flutter-build-args "dart-define-from-file=.env" \
            --platform linux \
            --targets rpm \
            --artifact-name '{{name}}-{{build_name}}.{{build_number}}-{{platform}}-amd64.{{ext}}'

      # Package the build.
      - name: Copy build for rpm
        run: ls -laR
        working-directory: dist

      - uses: actions/upload-artifact@v4
        with:
          name: linux-rpm-artifact
          path: |
            ./dist/**/*.rpm

      - name: Clean up
        if: ${{ always() }}
        run: |
          rm -f .env
