name: Test Linux tar (arm64)

on:
  workflow_dispatch:

# Declare default permissions as readonly.
permissions: read-all

jobs:
  tar:
    name: Create linux tar (aarch64)
    runs-on: ubuntu-24.04-arm
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies for Linux
        run: |
          sudo apt-get update -y && sudo apt-get upgrade -y
          sudo apt-get install -y curl libcurl4-openssl-dev git unzip xz-utils zip libglu1-mesa
          sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev libstdc++-12-dev
          sudo apt-get install -y p7zip-full p7zip-rar

      - name: Install libunwind-dev
        run: |
          # https://github.com/actions/runner-images/issues/6399#issuecomment-1285011525
          sudo apt-get install -y libunwind-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev

      - name: Install keybinder-3.0
        run: |
          # used by hotkey_manager
          sudo apt-get install -y keybinder-3.0

      - name: Install ayatana-appindicator3-0.1
        run: |
          # used by tray_manager
          sudo apt-get install -y libayatana-appindicator3-dev

      - name: Setup Flutter
        shell: bash
        run: |
          chmod +x ./scripts/install-flutter-github-actions.sh
          ./scripts/install-flutter-github-actions.sh

      - name: Flutter doctor -v
        run: flutter doctor -v

      - name: Configure .env
        run: |
          echo "$ENV_KEY" | base64 --decode > .env
        env:
          ENV_KEY: ${{ secrets.ENV_STG_BASE64 }}
  
      - name: Install flutter dependencies
        run: flutter pub get

      - name: Build app
        run: flutter build linux --dart-define-from-file=.env

      - name: Install yq
        run: |
          if ! command -v yq >/dev/null 2>&1; then
            echo "yq not exists"
            wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_arm64 -O /usr/bin/yq &&\
            chmod +x /usr/bin/yq
          fi
          yq --version

      - name: Build tar
        run: |
          baseDir=$(pwd)
          VERSION=$(yq '.version' pubspec.yaml)
          echo "$VERSION"
          archiveName="fafarunner_"$VERSION"_linux_aarch64.tar.gz"
          cd build/linux/arm64/release/bundle
          tar -czaf $archiveName ./*
          mv $archiveName "$baseDir/"

      # Package the build.
      - name: Copy build for tar
        run: ls -la *.tar.gz

      - uses: actions/upload-artifact@v4
        with:
          name: linux-tar-arm64-artifact
          path: |
            ./*.tar.gz

      - name: Clean up
        if: ${{ always() }}
        run: |
          rm -f .env
